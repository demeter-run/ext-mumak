# Project namespace
apiVersion: v1
kind: Namespace
metadata:
  name: prj-mainnet-test
---
# Access for the service account
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kube-rs
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
# Scoped service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-rs
  namespace: prj-mainnet-test
automountServiceAccountToken: true
---
# Binding the role to the account
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kube-rs-binding
  namespace: prj-mainnet-test
subjects:
  - kind: ServiceAccount
    namespace: prj-mainnet-test
    name: kube-rs
roleRef:
  kind: ClusterRole
  name: kube-rs
  apiGroup: rbac.authorization.k8s.io
---
# Grafana dependence
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: prj-mainnet-test
  labels:
    app: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana
          ports:
            - name: grafana
              containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: app
  namespace: prj-mainnet-test
  labels:
    app: grafana
spec:
  ports:
    - port: 3000
  selector:
    app: grafana
  clusterIP: None
---
# Prometheus dependence
apiVersion: v1
data:
  prometheus.yml: |
    global:
      scrape_interval: 30s
      evaluation_interval: 30s

    scrape_configs:
      - job_name: operator
        static_configs:
          - targets: ["operator:9187"]
kind: ConfigMap
metadata:
  name: prometheus-vol
  namespace: prj-mainnet-test
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: prj-mainnet-test
  labels:
    app: prometheus
spec:
  selector:
    matchLabels:
      app: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          ports:
            - name: prometheus
              containerPort: 9090
          volumeMounts:
            - name: configs
              mountPath: /etc/prometheus
      volumes:
        - name: configs
          configMap:
            name: prometheus-vol
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: prj-mainnet-test
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  type: ClusterIP
  ports:
    - name: prometheus
      port: 80
      targetPort: 9090
      protocol: TCP
---
# Run operator
apiVersion: apps/v1
kind: Deployment
metadata:
  name: operator
  namespace: prj-mainnet-test
  labels:
    app: operator
spec:
  selector:
    matchLabels:
      app: operator
  template:
    metadata:
      labels:
        app: operator
    spec:
      serviceAccountName: kube-rs
      containers:
        - name: operator
          image: operator:1.0
          ports:
            - containerPort: 9187
          env:
            - name: ADDR
              value: "0.0.0.0:9187"
            - name: DB_URLS
              value: "postgres://user:password@app.prj-mainnet-test.svc.cluster.local:5432"
            - name: DB_NAMES
              value: "mainnet=postgres"
            - name: DCU_PER_SECOND
              value: "mainnet=5"
            - name: METRICS_DELAY
              value: "30"
            - name: PROMETHEUS_URL
              value: "http://prometheus/api/v1" 
            - name: RUST_LOG
              value: "info,kube=debug,controller=debug"
---
apiVersion: v1
kind: Service
metadata:
  name: operator
  namespace: prj-mainnet-test
  labels:
    app: operator
spec:
  selector:
    app: operator
  type: ClusterIP
  ports:
    - name: operator
      port: 9187
      targetPort: 9187
      protocol: TCP
---
# Postgres dependence
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: prj-mainnet-test
  labels:
    app: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16
          env:
            - name: POSTGRES_DB
              value: "postgres"
            - name: POSTGRES_USER
              value: "user"
            - name: POSTGRES_PASSWORD
              value: "password"
          ports:
            - name: postgres
              containerPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: app
  namespace: prj-mainnet-test
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
  clusterIP: None
---
# Mumak Port 1
apiVersion: demeter.run/v1alpha1
kind: MumakPort
metadata:
  name: mainnet-user-1
  namespace: prj-mainnet-test
spec:
  network: mainnet 
